# ./hooks/build dev
# ./hooks/test dev

### Example: Build and test 'dev' tag locally like
### ./hooks/build dev
### ./hooks/test dev
### or with additional arguments
### ./hooks/build dev --no-cache
### ./hooks/test dev
### or using the utility
### ./utils/util-hdx.sh Dockerfile 1
### ./utils/util-hdx.sh Dockerfile 2
### The last output line should be '+ exit 0'
### If '+ exit 1' then adjust the version sticker
### variables in script './hooks/env'

ARG BASEIMAGE=accetto/xubuntu-vnc
ARG BASETAG=latest

FROM ${BASEIMAGE}:${BASETAG} as stage-utils

USER 0

### 'apt-get clean' runs automatically
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
        fakeroot \
        rpm \
    && apt-get -y autoremove \
    && rm -rf /var/lib/apt/lists/*

FROM stage-utils as stage-node
ARG ARG_NODE_VERSION

### This would install the current distribution version
### 'apt-get clean' runs automatically
# RUN \
#     chmod g+w /usr/local/lib \
#     && apt-get update && apt-get install -y \
#         nodejs \
#         npm \
#     && apt-get -y autoremove \
#     && rm -rf /var/lib/apt/lists/*

### Alternatively install the latest 'LTS' version explicitly
RUN \
    NODE_PATH=/usr/local \
    NODE_VERSION="v${ARG_NODE_VERSION}" \
    NODE_DISTRO=linux-x64 \
    && wget -qO- https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-${NODE_DISTRO}.tar.xz \
        | tar --strip-components 1 -xJv -C ${NODE_PATH}

COPY [ "./src/startup/", "${STARTUPDIR}/" ]

### Fix permissions
RUN \
    chmod a+wx "${STARTUPDIR}"/*.sh \
    && "${STARTUPDIR}"/set_user_permissions.sh "${STARTUPDIR}" "${HOME}"

FROM stage-node as stage-final

ARG ARG_REFRESHED_AT
ARG ARG_NODE_PORT
ARG ARG_SAMPLES_DIR
ARG ARG_VERSION_STICKER
ARG ARG_VCS_REF

ENV \
    NODE_PORT=${ARG_NODE_PORT:-3000} \
    SAMPLES_DIR=${ARG_SAMPLES_DIR:-/usr/local/src/samples}

WORKDIR "${SAMPLES_DIR}"

### add a simple app for testing node
### start it by 'node app.js' and connect to the container's port ${NODE_PORT}
### dont'f forget to create the container as for example 'docker run -p 3000 ...'
COPY [ "./src/node-test-app", "${SAMPLES_DIR}/node-test-app/" ]

RUN chmod -R g+w "${SAMPLES_DIR}"

### optionally expose the node port
EXPOSE ${NODE_PORT}

LABEL \
    org.label-schema.vcs-ref="${ARG_VCS_REF}" \
    version-sticker="${ARG_VERSION_STICKER}"

ENV \
    REFRESHED_AT=${ARG_REFRESHED_AT} \
    VERSION_STICKER=${ARG_VERSION_STICKER}

USER 1001
